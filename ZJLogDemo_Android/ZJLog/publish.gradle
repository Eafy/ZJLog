apply plugin: 'maven-publish'
apply plugin: 'signing'

def publishGroupID = 'io.github.eafy'
def publishProjectName = 'ZJLog'
def publishProjectVersion = android.defaultConfig.versionName
def publishSiteUrl = 'https://github.com/Eafy/ZJLog'
def publishGitUrl = 'scm:git@github.com:Eafy/ZJLog.git'

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source

    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId publishGroupID
            artifactId publishProjectName
            version publishProjectVersion

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar

            pom {
                name = publishProjectName
                description = 'ZJ Media Player SDK for Android at Maven，Supported H.264、Hevc、AAC and other formats.'
                url = publishSiteUrl
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'eafy'
                        name = 'Eafy'
                        email = 'lizhijian_21@163.com'
                    }
                }
                scm {
                    connection = publishGitUrl
                    developerConnection = publishGitUrl
                    url = publishSiteUrl
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "mavenCentral"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}
signing {
    sign publishing.publications
}